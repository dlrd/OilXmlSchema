<?xml version="1.0" encoding="UTF-8"?>

<!-- ############################################################################### -->
<!-- #  Filename : Oil.xsd                      # Oil Library Generator XML XSD    # -->
<!-- #  Author   : Arthur Vasseur               # After edit this file, wait 3 min.# -->
<!-- #  Started  : 02/01/2025 17:40             # for github update then restart VS# -->
<!-- ############################################################################### -->

<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" elementFormDefault="qualified" attributeFormDefault="unqualified">

  <!-- Attribute -->
  <xs:element name="attribute">
    <xs:complexType mixed="true"> <!-- alwayse use mixed="true" for complexType allowing user do jume line and indent with white spaces -->
      <xs:simpleContent>
        <xs:extension base="xs:string">
          <xs:attribute type="xs:string" name="name" use="required"/>
          <xs:attribute type="xs:string" name="variable" use="optional"/>
          <xs:attribute type="xs:string" name="stringfile" use="optional"/>
          <xs:attribute type="xs:string" name="statefile" use="optional"/>
          <xs:attribute type="xs:string" name="binaryfile" use="optional"/>
          <xs:attribute type="xs:string" name="state" use="optional"/>
          <xs:attribute type="xs:string" name="ifdef" use="optional"/>
          <xs:attribute type="xs:string" name="ifndef" use="optional"/>
          <xs:attribute type="xs:string" name="if" use="optional"/>
        </xs:extension>
      </xs:simpleContent>
    </xs:complexType>
  </xs:element>

  <!-- Variable -->
  <xs:element name="variable">
    <xs:complexType mixed="true">
      <xs:sequence minOccurs="0" maxOccurs="unbounded">
        <xs:element ref="attribute" minOccurs="0"/>
      </xs:sequence>
      <xs:attribute type="xs:string" name="class" use="required"/>
      <xs:attribute type="xs:string" name="name" use="required"/>
      <xs:attribute type="xs:string" name="impl" use="optional"/>
      <xs:attribute type="xs:boolean" name="advanced" use="optional"/>
      <xs:attribute type="xs:boolean" name="readonly" use="optional"/>
      <xs:attribute type="xs:string" name="default" use="optional"/>
      <xs:attribute type="xs:string" name="jsonid" use="optional"/>
      <xs:attribute type="xs:boolean" name="holder" use="optional"/>
      <xs:attribute type="xs:boolean" name="propagateChildrenChanges" use="optional"/>
    </xs:complexType>
  </xs:element>

  <xs:element name="description">
    <xs:complexType mixed="true">
      <xs:simpleContent>
        <xs:extension base="xs:string">
          <xs:attribute type="xs:string" name="language" use="required" fixed="us-en"/>
        </xs:extension>
      </xs:simpleContent>
    </xs:complexType>
  </xs:element>

  <!-- Class -->
  <xs:element name="class">
    <xs:complexType mixed="true">
      <xs:sequence>
        <xs:choice minOccurs="0" maxOccurs="unbounded">

          <xs:element ref="variable" minOccurs="0" maxOccurs="unbounded"/>
          <xs:element ref="attribute" minOccurs="0" maxOccurs="unbounded"/>

          <xs:element name="element" maxOccurs="unbounded" minOccurs="0">
            <xs:complexType mixed="true">
              <xs:sequence minOccurs="0" maxOccurs="1">
                <xs:element ref="description" maxOccurs="1" minOccurs="0"/>
              </xs:sequence>
              <xs:attribute type="xs:string" name="name" use="required"/>
              <xs:attribute type="xs:string" name="altName" use="optional"/>
              <xs:attribute type="xs:string" name="value" use="optional"/>
            </xs:complexType>
          </xs:element>

          <xs:element name="code" maxOccurs="1" minOccurs="0" type="xs:string"/>

          <xs:element name="method" minOccurs="0" maxOccurs="unbounded">
            <xs:complexType mixed="true">
              <xs:sequence>
                <xs:choice minOccurs="0" maxOccurs="unbounded">
                  <xs:element ref="attribute" maxOccurs="unbounded" minOccurs="0"/>
                  <xs:element ref="variable" maxOccurs="unbounded" minOccurs="0"/>
                </xs:choice>
                </xs:sequence>
              <xs:attribute type="xs:string" name="class" use="optional"/>
              <xs:attribute type="xs:string" name="name" use="required"/>
              <xs:attribute type="xs:string" name="base" use="optional"/>
            </xs:complexType>
          </xs:element>

          <xs:element name="importVariables" minOccurs="0" maxOccurs="1">
            <xs:complexType mixed="true">
              <xs:attribute type="xs:string" name="class" use="required"/>
              <xs:attribute type="xs:string" name="accessor" use="required"/>
              <xs:attribute type="xs:string" name="first" use="optional"/>
              <xs:attribute type="xs:string" name="count" use="optional"/>
            </xs:complexType>
          </xs:element>

        </xs:choice>
      </xs:sequence>
      <xs:attribute type="xs:string" name="name" use="optional"/>
      <xs:attribute type="xs:string" name="impl" use="optional"/>
      <xs:attribute type="xs:string" name="base" use="optional"/>
      <xs:attribute type="xs:boolean" name="abstract" use="optional"/>
      <xs:attribute type="xs:string" name="generated" use="optional" fixed="cpp"/>
      <xs:attribute type="xs:string" name="version" use="optional"/>
      <xs:attribute type="xs:string" name="state" use="optional"/>
      <xs:attribute type="xs:string" name="ifdef" use="optional"/>
      <xs:attribute type="xs:string" name="ifndef" use="optional"/>
      <xs:attribute type="xs:string" name="if" use="optional"/>
      <xs:attribute type="xs:string" name="metaclass" use="optional"/>  <!--for internal usage only-->
      <xs:attribute type="xs:string" name="nativetype" use="optional"/> <!--for Enumeration only-->
    </xs:complexType>
  </xs:element>


  <!-- Template Parameter -->
  <xs:element name="template-parameter">
    <xs:complexType mixed="true">
      <xs:attribute type="xs:string" name="name" use="optional"/>
      <xs:attribute type="xs:string" name="inheritsFrom" use="optional"/>
    </xs:complexType>
  </xs:element>

  <!-- Template Functor -->
  <xs:element name="template-functor">
    <xs:complexType mixed="true">
      <xs:attribute type="xs:string" name="name" use="optional"/>
    </xs:complexType>
  </xs:element>

  <!-- Template -->
  <xs:element name="template">
    <xs:complexType mixed="true">
      <xs:sequence minOccurs="0" maxOccurs="unbounded">
        <xs:element ref="template-parameter" minOccurs="0" maxOccurs="unbounded"/>
        <xs:element ref="template-functor"  minOccurs="0" maxOccurs="unbounded"/>
        <xs:element ref="class" minOccurs="0" maxOccurs="unbounded"/>
        <xs:element ref="variable" minOccurs="0" maxOccurs="unbounded"/>
        <xs:element ref="attribute" maxOccurs="unbounded" minOccurs="0"/>
      </xs:sequence>
      <xs:attribute type="xs:string" name="name" use="optional"/>
      <xs:attribute type="xs:string" name="base" use="optional"/>
      <xs:attribute type="xs:string" name="abstract" use="optional"/>
    </xs:complexType>
  </xs:element>
  
  <!-- Include -->
  <xs:element name="include">
    <xs:complexType mixed="true">
      <xs:attribute type="xs:string" name="file"     use="required"/>
      <xs:attribute type="xs:boolean" name="public"  use="optional"/>
      <xs:attribute type="xs:boolean" name="fromApi" use="optional"/>
      <xs:attribute type="xs:string" name="ifdef"    use="optional"/>
      <xs:attribute type="xs:string" name="ifndef"   use="optional"/>
      <xs:attribute type="xs:string" name="if"       use="optional"/>
    </xs:complexType>
  </xs:element>

  <!-- Import -->
  <xs:element name="import">
    <xs:complexType mixed="true">
      <xs:attribute type="xs:string" name="library"   use="required"/>
      <xs:attribute type="xs:boolean" name="public"   use="optional"/>
      <xs:attribute type="xs:string" name="ifdef"     use="optional"/>
      <xs:attribute type="xs:string" name="ifndef"    use="optional"/>
      <xs:attribute type="xs:string" name="if"        use="optional"/>
      <xs:attribute type="xs:string" name="namespace" use="optional"/>
    </xs:complexType>
  </xs:element>

  <!-- Generator (Special case for Enumeration) -->
  <xs:element name="generator">
    <xs:complexType mixed="true">
      <xs:simpleContent>
        <xs:extension base="xs:string">
          <xs:attribute type="xs:string" name="name" use="required"/>
        </xs:extension>
      </xs:simpleContent>
    </xs:complexType>
  </xs:element>

  <!-- AutoDeclaredSingletons -->
  <xs:element name="autoDeclaredSingletons">
    <xs:complexType mixed="true">
      <xs:simpleContent>
        <xs:extension base="xs:string">
          <xs:attribute type="xs:string" name="name" use="required"/>
        </xs:extension>
      </xs:simpleContent>
    </xs:complexType>
  </xs:element>

  <!-- class Predeclaration -->
  <xs:element name="classPredeclaration">
    <xs:complexType mixed="true">
      <xs:simpleContent>
        <xs:extension base="xs:string">
          <xs:attribute type="xs:string" name="name" use="required"/>
          <xs:attribute type="xs:boolean" name="public" use="optional"/>
          <xs:attribute type="xs:string" name="oilClassFromApi" use="optional"/>
        </xs:extension>
      </xs:simpleContent>
    </xs:complexType>
  </xs:element>

  <!-- Root Element library -->
  <xs:element name="library">
    <xs:complexType mixed="true">
      <xs:sequence>
        <xs:choice minOccurs="0" maxOccurs="unbounded">
          <xs:element ref="include" maxOccurs="unbounded" minOccurs="0"/>
          <xs:element ref="import" maxOccurs="unbounded" minOccurs="0"/>
          <xs:element ref="class" maxOccurs="unbounded" minOccurs="0"/>
          <xs:element ref="template" maxOccurs="unbounded" minOccurs="0"/>
          <xs:element ref="generator" maxOccurs="unbounded" minOccurs="0"/>
          <xs:element ref="autoDeclaredSingletons" maxOccurs="unbounded" minOccurs="0"/>
          <xs:element ref="classPredeclaration" maxOccurs="unbounded" minOccurs="0"/>
          
          <!-- description for plugin -->
          <xs:element ref="description" maxOccurs="1" minOccurs="0"/>

          <!-- Code -->
          <xs:element type="xs:string" name="code" maxOccurs="1" minOccurs="0"/>
          
        </xs:choice>
      </xs:sequence>
      
      <xs:attribute type="xs:string" name="export" use="optional"/>
      <xs:attribute type="xs:string" name="namespace" use="optional"/>
      <xs:attribute type="xs:string" name="programClass" use="optional"/>
      <xs:attribute type="xs:boolean" name="plugin" use="optional"/>
      <xs:attribute type="xs:boolean" name="precompiledHeader" use="optional"/>
    </xs:complexType>
  </xs:element>
  
</xs:schema>